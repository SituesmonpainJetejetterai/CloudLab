#cloud-config

package_update: true
package_upgrade: true

packages:
  - jq
  - curl
  - tar
  - vim
  - wget

runcmd:
  # Set SELinux in permissive mode (effectively disabling it)
  - sudo setenforce 0
  - sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

  # Install Salt Minion
  - mkdir -p /tmp/salt-minion/ && cd /tmp/salt-minion
  - curl -L https://bootstrap.saltstack.com -o install_salt.sh
  - sudo sh install_salt.sh
  - cd "-"

  # Prerequisites for kubeadm
  - swapoff -a
  - |
    sudo mkdir -p /etc/modules-load.d/
    cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
    overlay
    br_netfilter
    EOF
  - |
    sudo modprobe overlay
    sudo modprobe br_netfilter
  - |
    sudo mkdir -p /etc/sysctl.d/
    cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
    net.bridge.bridge-nf-call-iptables  = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    net.ipv4.ip_forward                 = 1
    EOF
  - sudo sysctl --system
  # Create pki directory
  - sudo mkdir -p /etc/kubernetes/pki/

  # Install containerd
  - |
    LATEST_RELEASE=$(curl -s https://api.github.com/repos/containerd/containerd/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
    LATEST_VERSION=$(printf "%s" $LATEST_RELEASE | sed 's/v//')
    OS="linux"
    ARCH="amd64"
    URL_CONTAINERD_SERVICE="https://raw.githubusercontent.com/containerd/containerd/main/containerd.service"
  - URL="https://github.com/containerd/containerd/releases/download/$LATEST_RELEASE/containerd-$LATEST_VERSION-$OS-$ARCH.tar.gz"
  - wget $URL
  - sudo tar -C /usr/local/ -xzvf "$(basename $URL)"
  - rm "$(basename $URL)"
  - sudo mkdir -p /usr/local/lib/systemd/system
  - sudo curl -o /usr/local/lib/systemd/system/containerd.service $URL_CONTAINERD_SERVICE
  - |
    sudo systemctl daemon-reload
    sudo systemctl enable --now containerd
  - |
    sudo mkdir -p /etc/containerd/
    # https://github.com/kodekloudhub/certified-kubernetes-administrator-course/blob/master/kubeadm-clusters/generic/04-node-setup.md
    containerd config default | sed 's/SystemdCgroup = false/SystemdCgroup = true/' | sudo tee /etc/containerd/config.toml
  - sudo systemctl restart containerd

  # Install runc
  - RUNC_URL=$(curl -s https://api.github.com/repos/opencontainers/runc/releases/latest | grep 'browser_download_url' | grep 'runc.amd64"$' | sed 's/.*\(http[^\"]*\)\".*/\1/')
  - curl -o /tmp/runc $RUNC_URL
  - sudo install -m 755 /tmp/runc /usr/local/sbin/runc

  # Install CNI plugins
  - DEST_DIR="/opt/cni/bin"
  - sudo mkdir -p $DEST_DIR
  - LATEST_RELEASE=$(curl -s "https://api.github.com/repos/containernetworking/plugins/releases/latest" | awk -F'"' '/tag_name/{print $4}')
  - |
    OS="linux"
    ARCH="amd64"
  - URL="https://github.com/containernetworking/plugins/releases/download/$LATEST_RELEASE/cni-plugins-$OS-$ARCH-$LATEST_RELEASE.tgz"
  - curl -L $URL -o /tmp/cni-plugins.tgz
  - tar Cxzvf $DEST_DIR /tmp/cni-plugins.tgz
  - rm /tmp/cni-plugins.tgz

  # Install Kubernetes
  - sudo touch "/etc/yum.repos.d/kubernetes.repo"
  # This overwrites any existing configuration in /etc/yum.repos.d/kubernetes.repo
  - |
    cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
    [kubernetes]
    name=Kubernetes
    baseurl=https://pkgs.k8s.io/core:/stable:/$(curl -sSL https://dl.k8s.io/release/stable.txt | sed 's/\(\.[0-9]*\)\.[0-9]*/\1/')/rpm/
    enabled=1
    gpgcheck=1
    gpgkey=https://pkgs.k8s.io/core:/stable:/$(curl -sSL https://dl.k8s.io/release/stable.txt | sed 's/\(\.[0-9]*\)\.[0-9]*/\1/')/rpm/repodata/repomd.xml.key
    exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
    EOF
  # Install kubelet, kubeadm and kubectl
  - sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
  - sudo systemctl enable --now kubelet
  - sudo kubeadm init phase kubelet-start

  # Use kubeadm to fetch the recommended pause container image version
  # Since there seems to be a discrepancy in the pause image version between containerd and kubeadm
  # Redundant if their versions are the same
  # https://github.com/kubernetes/kubernetes/issues/106903
  - |
    LATEST_PAUSE_VERSION=$(kubeadm config images list --kubernetes-version=$(kubeadm version -o short) | grep pause | cut -d ':' -f 2)
  # Construct the full image name with registry prefix
    FULL_PAUSE_IMAGE_NAME="registry.k8s.io/pause:$LATEST_PAUSE_VERSION"
    CONTAINERD_CONFIG="/etc/containerd/config.toml"
    sed -i "s/sandbox_image = .*/sandbox_image = \"$FULL_PAUSE_IMAGE_NAME\"/" $CONTAINERD_CONFIG
  # Temporary command ignoring warnings till I get a complete setup running with recommended specs
  - sudo kubeadm init --ignore-preflight-errors=NumCPU,Mem

write_files:
  - path: /etc/salt/minion
    content: |
      master: ${salt_master_dns}

final_message: |
  cloud-init has finished
  version: $version
  timestamp: $timestamp
  datasource: $datasource
  uptime: $uptime
